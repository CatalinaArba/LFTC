%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int currentLine=1;
void yyerror(char *msg);
%}

%option noyywrap

IDENTIFIER     [a-zA-Z_][a-zA-Z0-9_]*
INT_CONST      0|[-]?[1-9][0-9]*
DOUBLE_CONST   [-]?[1-9][0-9]*([.][0-9]+)|[-]?0[.][0-9]+
STRING_CONST   [\"][a-zA-Z0-9 ]*[\"]



%%

"read"|"write"|"if"|"else"|"whileLoop"|"forLoop"|"int"|"double"|"string"     {printf("Reserved words: %s\n", yytext);}
"+"|"-"|"*"|"/"|"%"|"<"|"<="|"=="|"!="|">="|">"|"="        {printf("Operator: %s\n", yytext);}
"{"|"}"|"["|"]"|"("|")"|","|";"        {printf("Separator: %s\n", yytext);}
{IDENTIFIER}     {printf("Identifier %s\n", yytext);}
{INT_CONST}      {printf("Integer constant: %s\n", yytext);}
{STRING_CONST}   {printf("String constant: %s\n", yytext);}
{DOUBLE_CONST}     {printf("Double constant: %s\n", yytext);}

[ \t]+   {}
[ \n]+   {}

[0-9][a-zA-Z0-9_]*		{printf("Illegal identifier at line %d\n", currentLine);}
[+|-]0		{printf("Illegal numeric constant at line %d\n", currentLine);}
[+|-]?[0][0-9]*([.][0-9]*)?		{printf("Illegal numeric constant at line %d\n", currentLine);}
.	{printf("Eroor");}

%%

void yyerror(char *msg){
	fprintf(stderr,"%s\n",msg);
	exit(1);
}

void main(argc, argv)
int argc;
char** argv;
{
if(argc > 1)
{
	FILE *file;
	file = fopen(argv[1], "r");
	if(!file)
	{
		fprintf(stderr, "Could not open %s\n", argv[1]);
		exit(1);
	}
	yyin = file;
}
yylex();
}